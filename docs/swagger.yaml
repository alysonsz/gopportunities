definitions:
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.Opportunity:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      location:
        type: string
      status:
        enum:
        - open
        - closed
        type: string
      title:
        maxLength: 100
        minLength: 3
        type: string
      updated_at:
        type: string
    required:
    - description
    - status
    - title
    type: object
  models.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.User:
    properties:
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /api/v1/opportunities:
    get:
      description: Get a list of opportunities with optional filters
      parameters:
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by location
        in: query
        name: location
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Opportunity'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all opportunities
      tags:
      - opportunities
    post:
      consumes:
      - application/json
      description: Create a new opportunity with provided data
      parameters:
      - description: Opportunity data
        in: body
        name: opportunity
        required: true
        schema:
          $ref: '#/definitions/models.Opportunity'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Opportunity'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new opportunity
      tags:
      - opportunities
  /api/v1/opportunities/{id}:
    delete:
      description: Delete an opportunity using its ID
      parameters:
      - description: Opportunity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete an opportunity by ID
      tags:
      - opportunities
    get:
      description: Retrieve opportunity details by its ID
      parameters:
      - description: Opportunity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Opportunity'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get an opportunity by ID
      tags:
      - opportunities
    put:
      consumes:
      - application/json
      description: Update an existing opportunity
      parameters:
      - description: Opportunity ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated data
        in: body
        name: opportunity
        required: true
        schema:
          $ref: '#/definitions/models.Opportunity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Opportunity'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update an opportunity by ID
      tags:
      - opportunities
  /api/v1/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User registration data
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
